public class MyHomework{
	public static void main(String[] args) {
		printThreeWords();
		checkSumSign();
		printColor();
		compareNumbers();
		checkSumm(12,23);
		checkPositiveNumber(5);
		checkMinusValue(-8);
		printStringInt("Привет", 5);
		checkYear();
		method10();
		method11();
		method12();
		method13(5);
		method14(10, 666);
    }
	public static void printThreeWords() {
		System.out.println("Orange", "Banana", "Apple");
	}
	public static void checkSumSign() {
		int a = 10, int b = 20;
		int sumAB = a + b;
		if (sumAB >= 0) {
			System.out.println("Сумма положительная");
		}
		else {
			System.out.println("Сумма отрицательная");
		}
	}
	public static void printColor() {
		int value = 0;
		if (value <= 0) {
			System.out.println("Красный");
		}
		else if (0 < value <= 100) {
				System.out.println("Желтый");
			}
			else (value > 100) {
				System.out.println("Зеленый");
			}
	}
	public static void compareNumbers() {
		int a = 5, b = 17;
		if (a >= b) {
			System.out.println("a >= b");
		}
		else {
			System.out.println("a < b");
		}
	}
	public static boolean checkSumm(int a, int b) {
		int sumAB = a + b;
		if (10 < sumAB <= 20) {
			return true;
		}
		else { 
			return false;
		}
	}
	public static void checkPositiveNumber(int num) {
		if (num >= 0) {
			System.out.println("Положительное число");
		}
		else {
			System.out.println("Отрицательное число");
		}
	}
	public static boolean checkMinusValue(int num) {
		if (num < 0) {
			return true;
		}
		else  {
			return false;
		}
	}
	public static void printStringInt (string a, int b) {
		for(int i=0; i < b, i++){
			System.out.println(a);
		}
		
	}
	public static boolean checkYear() {
		int year = 2024;
		checkYear = false;
		if ((year% 4 == 0) & (year% 100 != 0) & (year% 400 == 0)) {
			return true;
		}
		else  {
			return false;
		}
	}
	public static void method10 () {
		int[] massive = {1,1,0,0,0,0,1,0,1,1,1};
		for (int i=0, i < massive.lenght, i++) {
			if (massive[i] == 0) {
				massive[i] = 1;
			}
			else {
				massive[i] = 0;
			}
		}
	}
	public static void method11 () {
		int[] massive = new int[100];
		for (int i=0, massive.lenght, i++) {
			massive[i] = i+1;
		}
	}
	public static void method12 () {
		int[] massive = {1,5,3,2,11,4,5,2,4,8,9,1};
		for (int i=0, i < massive.lenght, i++) {
			if (massive[i] < 6) {
				massive[i] *= 2;
			}
		}
	}
	public static void method13 (int bitDepth) {
		int[][] doubleMassive = new int[bitDepth][bitDepth];
		for (int iRow = 0, iRow < bitDepth, i++) {
			for (int iCol = 0, iCol < bitDepth, i++) {
				if (iRow == iCol & (bitDepth - iCol == iRow)) ? doubleMassive[iRow][iCol] = 1 : doubleMassive[iRow][iCol] = 0;
			}
		}
	}
	public static int[] method14 (int len, int initialValue) {
		int[] returnVal = new int[len];
		for (int i=0, i < returnVal.lenght, i++) {
			returnVal[i] = initialValue;
		}
		return returnVal;
	}
}
